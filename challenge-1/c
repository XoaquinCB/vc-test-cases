#include "solution.h"
#include "unity.h"
#include <stdbool.h>

void setUp(void)
{
}

void tearDown(void)
{
}


void test1(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC123" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC1P10" };
    double expected = 110.7;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test2(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC123" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC1C10" };
    double expected = 113;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test3(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC010","DEF020","ABC010" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC2P50","DEF1C05" };
    double expected = 25;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test4(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC123","ABC123" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC1P10" };
    double expected = 221.4;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test5(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC008" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC1P05" };
    double expected = 7.6;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test6(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC123","ABC123" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC1C10" };
    double expected = 226;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test7(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC008" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC1C05" };
    double expected = 3;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test8(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC123" };
    int discountsSize = 1;
    char* discounts[1] = { "DEF1P10" };
    double expected = 123;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test9(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC123" };
    int discountsSize = 1;
    char* discounts[1] = { "" };
    double expected = 123;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test10(void)
{
    int itemsSize = 1;
    char* items[1] = { "" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC1P10" };
    double expected = 0;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test11(void)
{
    int itemsSize = 1;
    char* items[1] = { "" };
    int discountsSize = 1;
    char* discounts[1] = { "" };
    double expected = 0;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test12(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC123","ABC123" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC2P10" };
    double expected = 221.4;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test13(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC123","ABC123" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC3P10" };
    double expected = 246;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test14(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC123","ABC123" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC2C10" };
    double expected = 226;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test15(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC123","ABC123" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC3C10" };
    double expected = 246;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test16(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC123","BCD012" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC1P10","BCD1C10" };
    double expected = 112.7;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test17(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC005","BCD020" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC1C10" };
    double expected = 20;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test18(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC200" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC1C10","ABC1C20" };
    double expected = 180;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test19(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC200" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC1P10","ABC1P20" };
    double expected = 160;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test20(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC200" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC1C10","ABC1P10" };
    double expected = 180;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test21(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC050" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC1C10","ABC1P10" };
    double expected = 40;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}

void test22(void)
{
    int itemsSize = 1;
    char* items[1] = { "ABC050","BCD020","BCD020","ABC050","BCD020","CDE020","EFG200","EFG200" };
    int discountsSize = 1;
    char* discounts[1] = { "ABC3C40","ABC3P50","ABC2P10","BCD2C30","ABC2C05","ABC1P20","ABC1C05","DEF1C10","EFG3C40","EFG3P50","EFG2P10","EFG2C05","EFG1P20","EFG1C50" };
    double expected = 400;

    double output = CalculateBagTotal(items, itemsSize, discounts, discountsSize);

    TEST_ASSERT_EQUAL(expected, output);
}
