library(RUnit)
source('solution.R')


checkEquals(110.7, calculateBagTotal(c("ABC123"), c("ABC1P10")));

checkEquals(113, calculateBagTotal(c("ABC123"), c("ABC1C10")));

checkEquals(25, calculateBagTotal(c("ABC010","DEF020","ABC010"), c("ABC2P50","DEF1C05")));

checkEquals(221.4, calculateBagTotal(c("ABC123","ABC123"), c("ABC1P10")));

checkEquals(7.6, calculateBagTotal(c("ABC008"), c("ABC1P05")));

checkEquals(226, calculateBagTotal(c("ABC123","ABC123"), c("ABC1C10")));

checkEquals(3, calculateBagTotal(c("ABC008"), c("ABC1C05")));

checkEquals(123, calculateBagTotal(c("ABC123"), c("DEF1P10")));

checkEquals(123, calculateBagTotal(c("ABC123"), c("")));

checkEquals(0, calculateBagTotal(c(""), c("ABC1P10")));

checkEquals(0, calculateBagTotal(c(""), c("")));

checkEquals(221.4, calculateBagTotal(c("ABC123","ABC123"), c("ABC2P10")));

checkEquals(246, calculateBagTotal(c("ABC123","ABC123"), c("ABC3P10")));

checkEquals(226, calculateBagTotal(c("ABC123","ABC123"), c("ABC2C10")));

checkEquals(246, calculateBagTotal(c("ABC123","ABC123"), c("ABC3C10")));

checkEquals(112.7, calculateBagTotal(c("ABC123","BCD012"), c("ABC1P10","BCD1C10")));

checkEquals(20, calculateBagTotal(c("ABC005","BCD020"), c("ABC1C10")));

checkEquals(180, calculateBagTotal(c("ABC200"), c("ABC1C10","ABC1C20")));

checkEquals(160, calculateBagTotal(c("ABC200"), c("ABC1P10","ABC1P20")));

checkEquals(180, calculateBagTotal(c("ABC200"), c("ABC1C10","ABC1P10")));

checkEquals(40, calculateBagTotal(c("ABC050"), c("ABC1C10","ABC1P10")));

checkEquals(400, calculateBagTotal(c("ABC050","BCD020","BCD020","ABC050","BCD020","CDE020","EFG200","EFG200"), c("ABC3C40","ABC3P50","ABC2P10","BCD2C30","ABC2C05","ABC1P20","ABC1C05","DEF1C10","EFG3C40","EFG3P50","EFG2P10","EFG2C05","EFG1P20","EFG1C50")));

print('All tests passed')
