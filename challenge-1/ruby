require './solution'
require 'minitest/autorun'

class TestShoppingBag < MiniTest::Unit::TestCase


def test_1
    assert_equal 110.7, calculate_bag_total(Array["ABC123"], Array["ABC1P10"])
end

def test_2
    assert_equal 113, calculate_bag_total(Array["ABC123"], Array["ABC1C10"])
end

def test_3
    assert_equal 25, calculate_bag_total(Array["ABC010","DEF020","ABC010"], Array["ABC2P50","DEF1C05"])
end

def test_4
    assert_equal 221.4, calculate_bag_total(Array["ABC123","ABC123"], Array["ABC1P10"])
end

def test_5
    assert_equal 7.6, calculate_bag_total(Array["ABC008"], Array["ABC1P05"])
end

def test_6
    assert_equal 226, calculate_bag_total(Array["ABC123","ABC123"], Array["ABC1C10"])
end

def test_7
    assert_equal 3, calculate_bag_total(Array["ABC008"], Array["ABC1C05"])
end

def test_8
    assert_equal 123, calculate_bag_total(Array["ABC123"], Array["DEF1P10"])
end

def test_9
    assert_equal 123, calculate_bag_total(Array["ABC123"], Array[""])
end

def test_10
    assert_equal 0, calculate_bag_total(Array[""], Array["ABC1P10"])
end

def test_11
    assert_equal 0, calculate_bag_total(Array[""], Array[""])
end

def test_12
    assert_equal 221.4, calculate_bag_total(Array["ABC123","ABC123"], Array["ABC2P10"])
end

def test_13
    assert_equal 246, calculate_bag_total(Array["ABC123","ABC123"], Array["ABC3P10"])
end

def test_14
    assert_equal 226, calculate_bag_total(Array["ABC123","ABC123"], Array["ABC2C10"])
end

def test_15
    assert_equal 246, calculate_bag_total(Array["ABC123","ABC123"], Array["ABC3C10"])
end

def test_16
    assert_equal 112.7, calculate_bag_total(Array["ABC123","BCD012"], Array["ABC1P10","BCD1C10"])
end

def test_17
    assert_equal 20, calculate_bag_total(Array["ABC005","BCD020"], Array["ABC1C10"])
end

def test_18
    assert_equal 180, calculate_bag_total(Array["ABC200"], Array["ABC1C10","ABC1C20"])
end

def test_19
    assert_equal 160, calculate_bag_total(Array["ABC200"], Array["ABC1P10","ABC1P20"])
end

def test_20
    assert_equal 180, calculate_bag_total(Array["ABC200"], Array["ABC1C10","ABC1P10"])
end

def test_21
    assert_equal 40, calculate_bag_total(Array["ABC050"], Array["ABC1C10","ABC1P10"])
end

def test_22
    assert_equal 400, calculate_bag_total(Array["ABC050","BCD020","BCD020","ABC050","BCD020","CDE020","EFG200","EFG200"], Array["ABC3C40","ABC3P50","ABC2P10","BCD2C30","ABC2C05","ABC1P20","ABC1C05","DEF1C10","EFG3C40","EFG3P50","EFG2P10","EFG2C05","EFG1P20","EFG1C50"])
end

end
