import XCTest

class SolutionTests: XCTestCase {
    
    func test_1() {
        let solution = Solution()
        XCTAssertEqual(solution.numberOfDaysToSave(moneySaved: 8), 4)
    }
    
    func test_2() {
        let solution = Solution()
        XCTAssertEqual(solution.numberOfDaysToSave(moneySaved: 36), 10)
    }
    
    func test_3() {
        let solution = Solution()
        XCTAssertEqual(solution.numberOfDaysToSave(moneySaved: 0), 0)
    }
    
    func test_4() {
        let solution = Solution()
        XCTAssertEqual(solution.numberOfDaysToSave(moneySaved: 55), 13)
    }
    
    func test_5() {
        let solution = Solution()
        XCTAssertEqual(solution.numberOfDaysToSave(moneySaved: 56), 14)
    }
    
    func test_6() {
        let solution = Solution()
        XCTAssertEqual(solution.numberOfDaysToSave(moneySaved: 74778), 999)
    }
    
    func test_7() {
        let solution = Solution()
        XCTAssertEqual(solution.numberOfDaysToSave(moneySaved: 74779), 1000)
    }
    
    func test_8() {
        let solution = Solution()
        XCTAssertEqual(solution.numberOfDaysToSave(moneySaved: 33900), 665)
    }
    
    func test_9() {
        let solution = Solution()
        XCTAssertEqual(solution.numberOfDaysToSave(moneySaved: 74927), -1)
    }
    
    func test_10() {
        let solution = Solution()
        XCTAssertEqual(solution.numberOfDaysToSave(moneySaved: -1), -1)
    }

}

extension SolutionTests {
    static var allTests : [(String, (SolutionTests) -> () throws -> Void)] {
        return [
            
            ("test_1", test_1),
            
            ("test_2", test_2),
            
            ("test_3", test_3),
            
            ("test_4", test_4),
            
            ("test_5", test_5),
            
            ("test_6", test_6),
            
            ("test_7", test_7),
            
            ("test_8", test_8),
            
            ("test_9", test_9),
            
            ("test_10", test_10),
        ]
    }
}
